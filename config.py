# preprocessing
BINARY_THRESHOLD = -550
DATASET_PATH = './dataset'
PREPROCESSING_PATH = './preprocessing'
LOG_BASE_PATH = './output/training_logs'

CT_NUMPY_PATH = '{}/mhd_numpy_2'.format(PREPROCESSING_PATH)
CT_META_FILE = '{}/mhd_numpy/meta_file'.format(PREPROCESSING_PATH)
MSG_LOG_FILE = '{}/log.log'.format(LOG_BASE_PATH)
PROCESS_DONE = False

# unet model
INPUT_WIDTH, INPUT_HEIGHT, INPUT_DEPTH, INPUT_CHANNEL, OUTPUT_CHANNEL = 32, 32, 32, 1, 1

# train unet
SEG_NET_TRAIN_ROUND = 1
SEG_LOG_DIR = '{}/seg-run-{}'.format(LOG_BASE_PATH, SEG_NET_TRAIN_ROUND)
SEG_LOG_FILE_PATH = SEG_LOG_DIR + '/checkpoint-{epoch:02d}-{val_loss:.4f}.hdf5'
DIAMETER_BUFFER = 3

TRAIN_SEG_EPOCHS = 100000000
TRAIN_SEG_EARLY_STOPPING_PATIENCE = 10
TRAIN_SEG_TRAIN_BATCH_SIZE = 1
TRAIN_SEG_VALID_BATCH_SIZE = 1
TRAIN_SEG_STEPS_PER_EPOCH = 1
TRAIN_SEG_VALID_STEPS = 1

# TODO DEBUG
DEBUG_PREPROCESS_PLOT = True
DEBUG_SEG_TRY_OVERFIT = True
DEBUG_PART_EVALUATE_CALLBACK = True
DEBUG_IMAGE_STD = 1000.0

# train classifier
CLASSIFY_TRAIN_ROUND = 1
CLASSIFY_LOG_DIR = './output/training_logs/classify-run-{}'.format(SEG_NET_TRAIN_ROUND)
CLASSIFY_LOG_FILE_PATH = CLASSIFY_LOG_DIR + '/checkpoint-{epoch:02d}-{val_loss:.4f}.hdf5'
CLASSIFY_POSITIVE_SAMPLE_RATIO = 0.5

TRAIN_CLASSIFY_EPOCHS = 100000000
TRAIN_CLASSIFY_EARLY_STOPPING_PATIENCE = 10
TRAIN_CLASSIFY_TRAIN_BATCH_SIZE = 16
TRAIN_CLASSIFY_VALID_BATCH_SIZE = 4
TRAIN_CLASSIFY_STEPS_PER_EPOCH = 1
TRAIN_CLASSIFY_VALID_STEPS = 1
